module counter_to_10 (
  input clk, reset, d,
  output reg [3:0] q,
  output reg c
);

  always @(posedge clk, posedge reset) begin
    if (reset) begin
      q <= 4'b0000;
      c <= 1'b0;
    end
    else begin
      if (d) begin // Count down
        if (q == 4'b0000) begin
          q <= 4'b1001;
          c <= 1'b1;
        end
        else begin
          q <= q - 1;
          c <= 1'b0;
        end
      end
      else begin // Count up
        if (q == 4'b1001) begin
          q <= 4'b0000;
          c <= 1'b1;
        end
        else begin
          q <= q + 1;
          c <= 1'b0;
        end
      end
    end
  end

endmodule

//tb
`timescale 1ns/10ps
module counter_to_10_tb();
  reg clk,reset,d;
  wire [3:0] q;
  wire c;
  localparam T=20;
    //design under test
  counter_to_10 uut(.clk(clk),.reset(reset),.d(d),.q(q),.c(c));
  //clock
  always 
  begin
    clk=1'b1;
    #(T/4);
    clk=1'b0;
    #(T/4);
  end
  
  ////reset
  initial 
  begin
    reset=1'b1;
    d<=1'b1;
    #(T/2);
    reset=1'b0;
  end
  
  initial begin
    #(7*T);
    d=1'b0;
    #(5*T);
    d=1'b1;
    #(5*T);
    d=1'b0;
    $stop;
  end
  
endmodule
